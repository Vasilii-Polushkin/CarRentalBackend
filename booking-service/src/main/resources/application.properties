spring.application.name=booking-service

spring.config.import=classpath:/config/env.properties

spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.url=${DB_URL}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=validate

spring.liquibase.enabled=false
spring.liquibase.driver-class-name=org.postgresql.Driver
spring.liquibase.user=${DB_USERNAME}
spring.liquibase.password=${DB_PASSWORD}
spring.liquibase.url=${DB_URL}
spring.liquibase.default-schema=public
spring.liquibase.liquibase-schema=public
spring.liquibase.change-log=classpath:/config/liquibase/master.xml

springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true

logging.level.org.springframework.security=DEBUG

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=booking-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

server.port=8002

spring.profiles.active=dev
server.servlet.context-path=/api/booking-service